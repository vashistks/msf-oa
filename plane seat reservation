public static void main(String[] args) {
	int n = 2;
	String s = "1A 2F 1C";
	System.out.println(solution(s, n));
}

private static int solution(String s, int n) {
	int res = 0;
	String[] strs = s.split(" ");
	Map<Integer, Set<Character>> map = new HashMap<>();
	for(int i=1;i<=n;i++) {
		map.put(i, new HashSet<>());
	}
	for(String str : strs) {
		map.get(Integer.parseInt(str.substring(0, str.length() - 1))).add(str.charAt(str.length() - 1));
	}
	for(Map.Entry<Integer, Set<Character>> entry : map.entrySet()) {
		Set<Character> set = entry.getValue();
    if(set.contains('E') && set.contains('F')) continue;
		if(!set.contains('B') && !set.contains('C') && !set.contains('D') && !set.contains('E')) {
			res++;
			set.addAll(Arrays.asList('B', 'C', 'D', 'E'));
		}
		if(!set.contains('D') && !set.contains('E') && !set.contains('F') && !set.contains('G')) {
			res++;
			set.addAll(Arrays.asList('D', 'E', 'F', 'G'));
		}
		if(!set.contains('F') && !set.contains('G') && !set.contains('H') && !set.contains('J')) {
			res++;
			set.addAll(Arrays.asList('F', 'G', 'H', 'J'));
		}
	}
	return res;
}
